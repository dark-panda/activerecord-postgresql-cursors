---
name: ActiveRecord PostgreSQL Cursors
'on':
  push:
    branches:
    - master
    - github-actions
  pull_request:
jobs:
  tests:
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: password
        options: "--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5"
        ports:
        - 5432:5432
    strategy:
      matrix:
        ruby: [ '3.0', '3.1', '3.2', '3.3' ]
    name: Ruby ${{ matrix.ruby }} tests
    steps:
    - name: Check out app
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - name: Bundle install
      run: |-
        gem update --system
        bundle install --path=.bundle --jobs 2 --retry 3
    - name: Set up database
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: password
      run: |-
        psql template1 -c "create user appuser with encrypted password 'password' superuser;"
        createdb -O appuser postgresql_cursors_unit_tests
        cp -f test/ci/github/* test/
    - name: Run Tests
      env:
        COVERAGE: 'true'
        CI: 'true'
      run: bundle exec rake test
    - name: Fix coverage report
      if: always()
      run: sed -i "s/\/home\/runner\/work\/activerecord-postgresql-cursors\/activerecord-postgresql-cursors\//\/github\/workspace\//g" coverage/coverage.json || true
    - name: Run rubocop
      if: always()
      env:
        RAILS_ENV: test
      run: bundle exec rubocop --parallel --format=json > rubocop-report.json || true
    - name: Run SonarCloud
      if: always()
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        SONAR_TOKEN: "${{ secrets.SONAR_CLOUD_TOKEN }}"
